Vagrant.configure("2") do |config|
    # Définition des VM avec leurs IP et Hostnames
    vms = {
      "vm1" => "192.168.33.11",
      "vm2" => "192.168.33.12",
      "vm3" => "192.168.33.13"
    }
  
    vms.each do |name, ip|
      config.vm.define name do |vm|
        vm.vm.box = "ubuntu/jammy64"  # Ubuntu 22.04
        vm.vm.network "private_network", ip: ip
        vm.vm.hostname = "ubuntu-#{name}"
  
        vm.vm.provision "shell", inline: <<-SHELL
          echo "ubuntu-#{name}" | sudo tee /etc/hostname
          sudo hostnamectl set-hostname ubuntu-#{name}
  
          # Mise à jour et installation de SSH
          sudo apt update -y
          sudo apt install -y openssh-server
          sudo systemctl enable ssh
          sudo systemctl restart ssh
  
          # Génération de la clé SSH (si elle n'existe pas)
          if [ ! -f ~/.ssh/id_rsa ]; then
            ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
          fi
  
          # Ajout des clés publiques pour l'accès SSH entre les VMs
          for target in #{vms.keys.join(" ")}; do
            target_ip=#{vms['vm1']} # Valeur temporaire
            case $target in
              vm1) target_ip=#{vms['vm1']} ;;
              vm2) target_ip=#{vms['vm2']} ;;
              vm3) target_ip=#{vms['vm3']} ;;
            esac
            if [ "$target_ip" != "#{ip}" ]; then
              ssh-keyscan -H $target_ip >> ~/.ssh/known_hosts
            fi
          done
  
          # Copier la clé publique dans les autres VMs
          cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
          chmod 600 ~/.ssh/authorized_keys
          chmod 700 ~/.ssh
  
          # Désactiver la vérification stricte des hôtes SSH
          echo "StrictHostKeyChecking no" >> ~/.ssh/config
  
          # Ajout automatique des entrées /etc/hosts pour toutes les VMs
          echo "192.168.33.11 ubuntu-vm1" | sudo tee -a /etc/hosts
          echo "192.168.33.12 ubuntu-vm2" | sudo tee -a /etc/hosts
          echo "192.168.33.13 ubuntu-vm3" | sudo tee -a /etc/hosts
        SHELL
  
        # Installation de Docker uniquement sur vm1 et vm2
        if ["vm1", "vm2"].include?(name)
          vm.vm.provision "shell", inline: <<-SHELL
            curl -sSLf https://get.docker.com | sh
            sudo usermod -aG docker vagrant
          SHELL
        end
      end
    end
  end
  